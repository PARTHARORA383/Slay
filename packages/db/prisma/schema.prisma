// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int                 @id @default(autoincrement())
  email                String              @unique
  name                 String
  password             String              @default("defaultPassword")
  Balance              Balance[]
  OnRampTransaction    OnRampTransaction[]
  sentTransactions     P2PTransaction[]    @relation("SentTransactions")
  receivedTransactions P2PTransaction[]    @relation("ReceivedTransactions")
}

model Balance {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  amount Int
  locked Int
  user   User @relation(fields: [userId], references: [id])
}

model OnRampTransaction {
  id        Int          @id @default(autoincrement())
  status    OnRampStatus
  token     String       @unique
  provider  String
  amount    Int
  startTime DateTime
  userId    Int
  user      User         @relation(fields: [userId], references: [id])
}

model P2PTransaction {
  id        Int          @id @default(autoincrement())
  status    OnRampStatus
  amount    Int
  startTime DateTime     @default(now())

  senderId Int
  sender   User @relation("SentTransactions", fields: [senderId], references: [id])
  senderName  String @default("")
  senderEmail String  @default("")

  receiverId Int
  receiver   User @relation("ReceivedTransactions", fields: [receiverId], references: [id])
  reciverName String     @default("")
  recieverEmail   String  @default("")
}

model Bank_Account {
  id             Int                @id @default(autoincrement())
  UserId         String
  password       String
  bank_balance   Int
  Account_number Int                @unique
  transactions   Bank_transaction[]
}

model Bank_transaction {
  id            Int          @id @default(autoincrement())
  userId        String
  accountNumber Int
  startTime     DateTime
  status        OnRampStatus
  bankAccount   Bank_Account @relation(fields: [accountNumber], references: [Account_number])
}

enum OnRampStatus {
  Success
  Failure
  Processing
}
